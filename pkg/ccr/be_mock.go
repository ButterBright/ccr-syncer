// Code generated by MockGen. DO NOT EDIT.
// Source: rpc/be.go

// Package ccr is a generated GoMock package.
package ccr

import (
	reflect "reflect"

	backendservice "github.com/selectdb/ccr_syncer/pkg/rpc/kitex_gen/backendservice"
	gomock "go.uber.org/mock/gomock"
)

// MockIBeRpc is a mock of IBeRpc interface.
type MockIBeRpc struct {
	ctrl     *gomock.Controller
	recorder *MockIBeRpcMockRecorder
}

// MockIBeRpcMockRecorder is the mock recorder for MockIBeRpc.
type MockIBeRpcMockRecorder struct {
	mock *MockIBeRpc
}

// NewMockIBeRpc creates a new mock instance.
func NewMockIBeRpc(ctrl *gomock.Controller) *MockIBeRpc {
	mock := &MockIBeRpc{ctrl: ctrl}
	mock.recorder = &MockIBeRpcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBeRpc) EXPECT() *MockIBeRpcMockRecorder {
	return m.recorder
}

// IngestBinlog mocks base method.
func (m *MockIBeRpc) IngestBinlog(arg0 *backendservice.TIngestBinlogRequest) (*backendservice.TIngestBinlogResult_, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IngestBinlog", arg0)
	ret0, _ := ret[0].(*backendservice.TIngestBinlogResult_)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IngestBinlog indicates an expected call of IngestBinlog.
func (mr *MockIBeRpcMockRecorder) IngestBinlog(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IngestBinlog", reflect.TypeOf((*MockIBeRpc)(nil).IngestBinlog), arg0)
}
