// Code generated by MockGen. DO NOT EDIT.
// Source: ccr/base/ispec_factory.go

// Package ccr is a generated GoMock package.
package ccr

import (
	reflect "reflect"

	base "github.com/selectdb/ccr_syncer/ccr/base"
	gomock "go.uber.org/mock/gomock"
)

// MockISpecFactory is a mock of ISpecFactory interface.
type MockISpecFactory struct {
	ctrl     *gomock.Controller
	recorder *MockISpecFactoryMockRecorder
}

// MockISpecFactoryMockRecorder is the mock recorder for MockISpecFactory.
type MockISpecFactoryMockRecorder struct {
	mock *MockISpecFactory
}

// NewMockISpecFactory creates a new mock instance.
func NewMockISpecFactory(ctrl *gomock.Controller) *MockISpecFactory {
	mock := &MockISpecFactory{ctrl: ctrl}
	mock.recorder = &MockISpecFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISpecFactory) EXPECT() *MockISpecFactoryMockRecorder {
	return m.recorder
}

// NewISpec mocks base method.
func (m *MockISpecFactory) NewISpec(tableSpec *base.Spec) base.ISpec {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewISpec", tableSpec)
	ret0, _ := ret[0].(base.ISpec)
	return ret0
}

// NewISpec indicates an expected call of NewISpec.
func (mr *MockISpecFactoryMockRecorder) NewISpec(tableSpec interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewISpec", reflect.TypeOf((*MockISpecFactory)(nil).NewISpec), tableSpec)
}
